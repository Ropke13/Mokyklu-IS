// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mokyklu_IS.Model;

namespace Mokyklu_IS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211206010314_fixedsomestuff")]
    partial class fixedsomestuff
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mokyklu_IS.Model.Administratorius", b =>
                {
                    b.Property<int>("Tabelio_nr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Pavarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_nr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vardas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fk_Registracija")
                        .HasColumnType("int");

                    b.HasKey("Tabelio_nr");

                    b.HasIndex("fk_Registracija");

                    b.ToTable("Administratorius");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Atsiskaitymas", b =>
                {
                    b.Property<int>("Id_Atsiskaitymas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fk_Klase")
                        .HasColumnType("int");

                    b.Property<int>("fk_Mokytojas")
                        .HasColumnType("int");

                    b.Property<string>("laikas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Atsiskaitymas");

                    b.HasIndex("fk_Klase");

                    b.HasIndex("fk_Mokytojas");

                    b.ToTable("Atsiskaitymas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Dalykas", b =>
                {
                    b.Property<int>("Id_Dalykas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ar_isplestinis")
                        .HasColumnType("bit");

                    b.Property<string>("Pavadinimas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Dalykas");

                    b.ToTable("Dalykas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Destymas", b =>
                {
                    b.Property<int?>("fk_Klase")
                        .HasColumnType("int");

                    b.Property<int>("fk_Mokytojas")
                        .HasColumnType("int");

                    b.HasIndex("fk_Klase");

                    b.HasIndex("fk_Mokytojas");

                    b.ToTable("Destymas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Klase", b =>
                {
                    b.Property<int>("Id_Klase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Metai")
                        .HasColumnType("int");

                    b.Property<string>("Pavadinimas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Klase");

                    b.ToTable("Klase");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Mokinys", b =>
                {
                    b.Property<int>("Id_Mokinys")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asmens_kodas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Dalyku_sk")
                        .HasColumnType("int");

                    b.Property<string>("GimimoData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pamoku_sk")
                        .HasColumnType("int");

                    b.Property<string>("Pavarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_nr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vardas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fk_Klase")
                        .HasColumnType("int");

                    b.Property<int>("fk_Registracija")
                        .HasColumnType("int");

                    b.Property<int?>("fk_Tevas")
                        .HasColumnType("int");

                    b.HasKey("Id_Mokinys");

                    b.HasIndex("fk_Klase");

                    b.HasIndex("fk_Registracija");

                    b.HasIndex("fk_Tevas");

                    b.ToTable("Mokinys");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Mokytojas", b =>
                {
                    b.Property<int>("Id_Mokytojas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ar_pilnu_etatu")
                        .HasColumnType("bit");

                    b.Property<string>("Asmens_kodas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pamoku_sk")
                        .HasColumnType("int");

                    b.Property<string>("Pavarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_nr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vardas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fk_Dalykas")
                        .HasColumnType("int");

                    b.Property<int>("fk_Registracija")
                        .HasColumnType("int");

                    b.HasKey("Id_Mokytojas");

                    b.HasIndex("fk_Dalykas");

                    b.HasIndex("fk_Registracija");

                    b.ToTable("Mokytojas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Namu_Darbas", b =>
                {
                    b.Property<int>("Id_Namu_darbas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uzduotis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fk_Klase")
                        .HasColumnType("int");

                    b.Property<int>("fk_Mokytojas")
                        .HasColumnType("int");

                    b.HasKey("Id_Namu_darbas");

                    b.HasIndex("fk_Klase");

                    b.HasIndex("fk_Mokytojas");

                    b.ToTable("Namu_Darbas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Pamoka", b =>
                {
                    b.Property<int>("Id_Pamoka")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fk_Klase")
                        .HasColumnType("int");

                    b.Property<int>("fk_Mokytojas")
                        .HasColumnType("int");

                    b.Property<string>("laikas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Pamoka");

                    b.HasIndex("fk_Klase");

                    b.HasIndex("fk_Mokytojas");

                    b.ToTable("Pamoka");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Pastaba", b =>
                {
                    b.Property<int>("Id_Pastaba")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tekstas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fk_Mokinys")
                        .HasColumnType("int");

                    b.Property<int?>("fk_Mokytojas")
                        .HasColumnType("int");

                    b.HasKey("Id_Pastaba");

                    b.HasIndex("fk_Mokinys");

                    b.HasIndex("fk_Mokytojas");

                    b.ToTable("Pastaba");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Pazimys", b =>
                {
                    b.Property<int>("Id_Pazimys")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ivertis")
                        .HasColumnType("int");

                    b.Property<string>("Komentaras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vertinimo_priezastis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fk_Atsiskaitymas")
                        .HasColumnType("int");

                    b.Property<int?>("fk_Mokinys")
                        .HasColumnType("int");

                    b.Property<int?>("fk_Mokytojas")
                        .HasColumnType("int");

                    b.HasKey("Id_Pazimys");

                    b.HasIndex("fk_Atsiskaitymas");

                    b.HasIndex("fk_Mokinys");

                    b.HasIndex("fk_Mokytojas");

                    b.ToTable("Pazimys");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Registracija", b =>
                {
                    b.Property<int>("Id_Registracija")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ar_patvirtinta")
                        .HasColumnType("bit");

                    b.Property<string>("Asmens_kodas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pavarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prisijungimo_vardas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slaptazodis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_nr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vardas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Registracija");

                    b.ToTable("Registracija");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Susirinkimas", b =>
                {
                    b.Property<int>("Id_Susirinkimas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kabinetas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Laikas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priezastis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Susirinkimas");

                    b.ToTable("Susirinkimas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Tevas", b =>
                {
                    b.Property<int>("Id_Tevas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asmens_kodas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pavarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_nr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Vaiku_sk")
                        .HasColumnType("int");

                    b.Property<string>("Vardas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fk_Registracija")
                        .HasColumnType("int");

                    b.Property<int?>("fk_Susirinkimas")
                        .HasColumnType("int");

                    b.HasKey("Id_Tevas");

                    b.HasIndex("fk_Registracija");

                    b.HasIndex("fk_Susirinkimas");

                    b.ToTable("Tevas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Tvarkarastis", b =>
                {
                    b.Property<int>("Id_Tvarkarastis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Klase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Laikas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pamoka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sav_Diena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Tvarkarastis");

                    b.ToTable("Tvarkarastis");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Zinutes", b =>
                {
                    b.Property<int>("Id_Zinutes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tekstas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fk_Mokytojas")
                        .HasColumnType("int");

                    b.Property<int?>("fk_Tevas")
                        .HasColumnType("int");

                    b.HasKey("Id_Zinutes");

                    b.HasIndex("fk_Mokytojas");

                    b.HasIndex("fk_Tevas");

                    b.ToTable("Zinutes");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Administratorius", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Registracija", "Registracija")
                        .WithMany()
                        .HasForeignKey("fk_Registracija")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Atsiskaitymas", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Klase", "Klase")
                        .WithMany()
                        .HasForeignKey("fk_Klase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mokyklu_IS.Model.Mokytojas", "Mokytojas")
                        .WithMany()
                        .HasForeignKey("fk_Mokytojas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Destymas", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Klase", "Klase")
                        .WithMany()
                        .HasForeignKey("fk_Klase");

                    b.HasOne("Mokyklu_IS.Model.Mokytojas", "Mokytojas")
                        .WithMany()
                        .HasForeignKey("fk_Mokytojas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Mokinys", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Klase", "Klase")
                        .WithMany()
                        .HasForeignKey("fk_Klase");

                    b.HasOne("Mokyklu_IS.Model.Registracija", "Registracija")
                        .WithMany()
                        .HasForeignKey("fk_Registracija")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mokyklu_IS.Model.Tevas", "Tevas")
                        .WithMany()
                        .HasForeignKey("fk_Tevas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Mokytojas", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Dalykas", "Dalykas")
                        .WithMany()
                        .HasForeignKey("fk_Dalykas");

                    b.HasOne("Mokyklu_IS.Model.Registracija", "Registracija")
                        .WithMany()
                        .HasForeignKey("fk_Registracija")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Namu_Darbas", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Klase", "Klase")
                        .WithMany()
                        .HasForeignKey("fk_Klase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mokyklu_IS.Model.Mokytojas", "Mokytojas")
                        .WithMany()
                        .HasForeignKey("fk_Mokytojas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Pamoka", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Klase", "Klase")
                        .WithMany()
                        .HasForeignKey("fk_Klase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mokyklu_IS.Model.Mokytojas", "Mokytojas")
                        .WithMany()
                        .HasForeignKey("fk_Mokytojas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Pastaba", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Mokinys", "Mokinys")
                        .WithMany()
                        .HasForeignKey("fk_Mokinys");

                    b.HasOne("Mokyklu_IS.Model.Mokytojas", "Mokytojas")
                        .WithMany()
                        .HasForeignKey("fk_Mokytojas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Pazimys", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Atsiskaitymas", "Atsiskaitymas")
                        .WithMany()
                        .HasForeignKey("fk_Atsiskaitymas");

                    b.HasOne("Mokyklu_IS.Model.Mokinys", "Mokinys")
                        .WithMany()
                        .HasForeignKey("fk_Mokinys");

                    b.HasOne("Mokyklu_IS.Model.Mokytojas", "Mokytojas")
                        .WithMany()
                        .HasForeignKey("fk_Mokytojas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Tevas", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Registracija", "Registracija")
                        .WithMany()
                        .HasForeignKey("fk_Registracija")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mokyklu_IS.Model.Susirinkimas", "Susirinkimas")
                        .WithMany()
                        .HasForeignKey("fk_Susirinkimas");
                });

            modelBuilder.Entity("Mokyklu_IS.Model.Zinutes", b =>
                {
                    b.HasOne("Mokyklu_IS.Model.Mokytojas", "Mokytojas")
                        .WithMany()
                        .HasForeignKey("fk_Mokytojas");

                    b.HasOne("Mokyklu_IS.Model.Tevas", "Tevas")
                        .WithMany()
                        .HasForeignKey("fk_Tevas");
                });
#pragma warning restore 612, 618
        }
    }
}
